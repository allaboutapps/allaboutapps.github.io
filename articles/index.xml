<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>All Articles on all about apps</title>
    <link>https://code.allaboutapps.at/articles/</link>
    <description>Recent content in All Articles on all about apps</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 25 Sep 2018 16:01:48 +0200</lastBuildDate>
    
	<atom:link href="https://code.allaboutapps.at/articles/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Android Template Project</title>
      <link>https://code.allaboutapps.at/articles/android-template-project/</link>
      <pubDate>Tue, 25 Sep 2018 16:01:48 +0200</pubDate>
      
      <guid>https://code.allaboutapps.at/articles/android-template-project/</guid>
      <description>Team Android Project Template As a software development company we are starting new projects every few weeks. With every project we create a jira ticket called Project Setup.
We walked through all our Project Setup Jira tickets and calculated the average hours for this kind of task: In average every android project needs about 3.5 hours for a simple setup. On the other hand the project setup is boring and no developer likes that work.</description>
    </item>
    
    <item>
      <title>Reactive Snippet: Access Control for Mutable Properties</title>
      <link>https://code.allaboutapps.at/articles/reactive-swift-properties/</link>
      <pubDate>Tue, 17 Jul 2018 11:50:28 +0200</pubDate>
      
      <guid>https://code.allaboutapps.at/articles/reactive-swift-properties/</guid>
      <description>Swift&amp;rsquo;s access control allows us to define separate access levels for the getter and setter of a property. This is nice if we want to provide read access to a property but should only be able to modify it internally:
private(set) var isLoading = false When using ReactiveSwift (or similarly RxSwift) you usually work with MutableProperty. In order to limit modification of the property&amp;rsquo;s value we can create a private writable MutableProperty and a public read-only Property:</description>
    </item>
    
    <item>
      <title>Reactive Snippet: flatMap, flatten and combineLatest</title>
      <link>https://code.allaboutapps.at/articles/reactive-swift-flatmap/</link>
      <pubDate>Tue, 17 Jul 2018 11:50:28 +0200</pubDate>
      
      <guid>https://code.allaboutapps.at/articles/reactive-swift-flatmap/</guid>
      <description>Most of our projects at all about apps are build using a MVVM architecture with ReactiveSwift as our reactive framework of choice. However, all code examples should be easily translatable to RxSwift.
Often, you end up with an array of objects (e.g. View Models) which contain some reactive property that you want to bind to. The array itself is a MutableProperty as well and can change at any time (e.g. after a network request).</description>
    </item>
    
  </channel>
</rss>